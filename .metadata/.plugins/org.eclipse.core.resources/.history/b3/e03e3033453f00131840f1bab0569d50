package graphes.pg;

import ast.statement.IfStatement;

public class IfProgramGraph extends ProgramGraph {
	//constructor
	public IfProgramGraph (IfStatement st, int initialNode, int finalNode) {   
	String boolBlock = st.getCondition().toString();
	if (edges.isEmpty()== false)// add “then” branch
		edges.add(new Edge(initialNode, boolBlock, edges.get(edges.size()-1).qt +1)); 
	else {//add “else” branch 
		edges.add( new Edge(1, boolBlock,2)); 
		edges.add(new Edge(edges.get(edges.size()-1).qs, '!'+ boolBlock, edges.get(edges.size()-1).qt+1)); 
	}
	
	// graph is created recursively for each branch separate recursion 
	int qsElseBranch = edges.get(edges.size()-1).qt;
	ProgramGraphFactory.create(st.getThenStatement (), edges.prelast().qt, finalNode);
	finalNode = edges.last().qt; 
	ProgramGraphFatrory.create(st.getElseStatement(),qsElseBranch, finalNode);
	}
	}
